vars: {
  d2-config: {
    sketch: true
  }
}
classes: {
  file: {
    label: ""
    shape: diamond
    style: {
      fill: yellow
      shadow: true
    }
  }
}

classes: {
  class: {
    label: ""
    shape: rectangle
    style: {
      fill: lightblue
      shadow: true
    }
  }
}

classes: {
  object: {
    label: ""
    shape: hexagon
    style: {
      fill: while
      shadow: false
    }
  }
}
GNNConvEBM.class: class
GNNConvEBM.label: "GNNConvEBM"
GNNConvEBM: {
  style: {
    opacity: 0.65
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
transformer_py.class: file
transformer_py.label: "transformer_py"
transformer_py: {
  style: {
    opacity: 0.65
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
SudokuLatentEBM.class: class
SudokuLatentEBM.label: "SudokuLatentEBM"
SudokuLatentEBM: {
  style: {
    opacity: 0.69
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
GNNConv1DReverse.class: class
GNNConv1DReverse.label: "GNNConv1DReverse"
GNNConv1DReverse: {
  style: {
    opacity: 0.65
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
nlm_py.class: file
nlm_py.label: "nlm_py"
nlm_py: {
  style: {
    opacity: 1.00
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
LogicLayer.class: class
LogicLayer.label: "LogicLayer"
LogicLayer: {
  style: {
    opacity: 0.62
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
GNNConv1DEBMV2.class: class
GNNConv1DEBMV2.label: "GNNConv1DEBMV2"
GNNConv1DEBMV2: {
  style: {
    opacity: 0.64
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
GraphReverse.class: class
GraphReverse.label: "GraphReverse"
GraphReverse: {
  style: {
    opacity: 0.62
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
SudokuDenoise.class: class
SudokuDenoise.label: "SudokuDenoise"
SudokuDenoise: {
  style: {
    opacity: 0.69
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
Reducer.class: class
Reducer.label: "Reducer"
Reducer: {
  style: {
    opacity: 0.62
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
GPT.class: class
GPT.label: "GPT"
GPT: {
  style: {
    opacity: 0.65
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
MLPLayer.class: class
MLPLayer.label: "MLPLayer"
MLPLayer: {
  style: {
    opacity: 0.66
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
nlm_utils_py.class: file
nlm_utils_py.label: "nlm_utils_py"
nlm_utils_py: {
  style: {
    opacity: 0.90
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
InferenceBase.class: class
InferenceBase.label: "InferenceBase"
InferenceBase: {
  style: {
    opacity: 0.68
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
models_py.class: file
models_py.label: "models_py"
models_py: {
  style: {
    opacity: 1.00
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
Attention.class: class
Attention.label: "Attention"
Attention: {
  style: {
    opacity: 0.63
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
InputTransform.class: class
InputTransform.label: "InputTransform"
InputTransform: {
  style: {
    opacity: 0.65
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
LogicMachine.class: class
LogicMachine.label: "LogicMachine"
LogicMachine: {
  style: {
    opacity: 0.66
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
LinearLayer.class: class
LinearLayer.label: "LinearLayer"
LinearLayer: {
  style: {
    opacity: 0.64
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
SudokuEBM.class: class
SudokuEBM.label: "SudokuEBM"
SudokuEBM: {
  style: {
    opacity: 0.69
    stroke: "black"
    stroke-width: 4
    shadow: true
  }
}
transformer_py -> GPT: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
SudokuLatentEBM -> Attention: {
  style.stroke: black
  style.opacity: 0.63
  style.stroke-width: 2
}
nlm_py -> MLPLayer: {
  style.stroke: yellow
  style.opacity: 0.66
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> nlm_utils_py: {
  style.stroke: yellow
  style.opacity: 0.90
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> InferenceBase: {
  style.stroke: yellow
  style.opacity: 0.68
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> LogicLayer: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> Reducer: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> InputTransform: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> LogicMachine: {
  style.stroke: yellow
  style.opacity: 0.66
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_py -> LinearLayer: {
  style.stroke: yellow
  style.opacity: 0.64
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
SudokuDenoise -> Attention: {
  style.stroke: black
  style.opacity: 0.63
  style.stroke-width: 2
}
MLPLayer -> LinearLayer: {
  style.stroke: black
  style.opacity: 0.64
  style.stroke-width: 2
}
nlm_utils_py -> MLPLayer: {
  style.stroke: yellow
  style.opacity: 0.66
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_utils_py -> InferenceBase: {
  style.stroke: yellow
  style.opacity: 0.68
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_utils_py -> Reducer: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_utils_py -> InputTransform: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
nlm_utils_py -> LinearLayer: {
  style.stroke: yellow
  style.opacity: 0.64
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
InferenceBase -> MLPLayer: {
  style.stroke: black
  style.opacity: 0.66
  style.stroke-width: 2
}
InferenceBase -> LinearLayer: {
  style.stroke: black
  style.opacity: 0.64
  style.stroke-width: 2
}
models_py -> transformer_py: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> SudokuLatentEBM: {
  style.stroke: yellow
  style.opacity: 0.69
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> GNNConv1DReverse: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> nlm_py: {
  style.stroke: yellow
  style.opacity: 1.00
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> LogicLayer: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> nlm_utils_py: {
  style.stroke: yellow
  style.opacity: 0.90
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> Attention: {
  style.stroke: yellow
  style.opacity: 0.63
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> InputTransform: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> LogicMachine: {
  style.stroke: yellow
  style.opacity: 0.66
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> GNNConvEBM: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> GNNConv1DEBMV2: {
  style.stroke: yellow
  style.opacity: 0.64
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> GraphReverse: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> SudokuDenoise: {
  style.stroke: yellow
  style.opacity: 0.69
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> Reducer: {
  style.stroke: yellow
  style.opacity: 0.62
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> GPT: {
  style.stroke: yellow
  style.opacity: 0.65
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> MLPLayer: {
  style.stroke: yellow
  style.opacity: 0.66
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> InferenceBase: {
  style.stroke: yellow
  style.opacity: 0.68
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> LinearLayer: {
  style.stroke: yellow
  style.opacity: 0.64
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
models_py -> SudokuEBM: {
  style.stroke: yellow
  style.opacity: 0.69
  style.stroke-width: 2
  style.stroke-dash: 5
  style.animated: true
}
LogicMachine -> LogicLayer: {
  style.stroke: black
  style.opacity: 0.62
  style.stroke-width: 2
}
SudokuEBM -> Attention: {
  style.stroke: black
  style.opacity: 0.63
  style.stroke-width: 2
}