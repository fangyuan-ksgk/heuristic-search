{
  "code": "from datetime import date\nimport http.client\nimport json\nimport os\nimport re\nfrom typing import Dict, Any\n\n\ndef _search_google(query: str) ->Dict[str, Any]:\n    \"\"\"\n    Use Serper API to search Google for information\n    \n    Args:\n        query (str): The search query\n    \n    Returns:\n        Dict[str, Any]: Parsed JSON response from the API\n    \"\"\"\n    conn = http.client.HTTPSConnection('google.serper.dev')\n    payload = json.dumps({'q': query})\n    headers = {'X-API-KEY': os.environ['SERPER_API_KEY'], 'Content-Type':\n        'application/json'}\n    try:\n        conn.request('POST', '/search', payload, headers)\n        res = conn.getresponse()\n        data = res.read()\n        return json.loads(data.decode('utf-8'))\n    except Exception as e:\n        print(f'Error occurred during API request: {str(e)}')\n        return {}\n    finally:\n        conn.close()\n\n\ndef search_google(query: str) ->str:\n    \"\"\" \n    Input query, return search result string from Google\n    \"\"\"\n    result = _search_google(query)\n    result_dict = {k.replace('organic', 'Search Result'): v for k, v in\n        result.items() if k in ['answerBox', 'organic']}\n    result_str = json.dumps(result_dict, indent=2)\n    return result_str\n\n\ndef get_celeb_age(name: str) ->int:\n    \"\"\"\n    Searches Google for the birth year of a celebrity and calculates their current age.\n    \n    Args:\n        name (str): The name of the celebrity.\n    \n    Returns:\n        int: The age of the celebrity.\n    \"\"\"\n    query = f\"'{name}' birthdate\"\n    google_result = search_google(query)\n    birth_year_match = re.search('(19\\\\d{2}|20\\\\d{2})', google_result)\n    if birth_year_match:\n        birth_year = int(birth_year_match.group())\n        current_year = date.today().year\n        age = current_year - birth_year\n        return age\n    else:\n        return -1\n",
  "reasoning": "My new algorithm, named 'CelebAgeFinder', involves using Google search results to find the birthdate of a celebrity, parsing the birthdate to get the birth year, and then calculating the celebrity's current age by subtracting the birth year from the current year.",
  "meta_prompt": {
    "task": "Search for age of a celebrity.",
    "func_name": "get_celeb_age",
    "inputs": [
      "name"
    ],
    "outputs": [
      "age"
    ],
    "input_types": [
      "str"
    ],
    "output_types": [
      "int"
    ],
    "mode": "code"
  },
  "test_cases": [
    {
      "input": {
        "name": "Dilireba"
      },
      "expected_output": {
        "age": 32
      }
    },
    {
      "input": {
        "name": "ChengXiao"
      },
      "expected_output": {
        "age": 26
      }
    }
  ]
}